{"version":3,"sources":["../../dist/index.es.js","mapStyles.js","Map.js","index.js"],"names":["ViewportUpdatingMode","MoveFunctions","_assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","getMapViewport","map","_a","getCenter","toArray","latitude","longitude","zoom","getZoom","bearing","getBearing","pitch","getPitch","setMapViewport","viewport","options","center","LngLat","moveFn","jumpTo","moveOptions","speed","curve","easing","flyTo","easeTo","getMoveParams","defaultViewport","mapNodeRef","style","onViewportChanged","onLoaded","mapboxAccessToken","_b","initialViewport","_c","viewportUpdatingMode","MOVEEND","mapRef","viewportChanged","target","current","mapOptions","container","token","_d","_e","getMapOptions","Map","on","remove","setStyle","modeName","values","includes","Error","checkUpdatingMode","off","getMap","setViewport","currentViewport","STYLES","OSM","version","sources","osm","type","tiles","tileSize","layers","id","source","OTP","otp","INITIAL_VIEWPORT","useState","mode","updatingMode","setUpdatingMode","mapDivRef","useRef","useMapboxGl","v","console","log","className","name","value","onChange","e","onClick","MOVE","href","ref","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27d769bc.chunk.js","sourcesContent":["import { useRef, useCallback, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nvar ViewportUpdatingMode;\n\n(function (ViewportUpdatingMode) {\n  ViewportUpdatingMode[\"MOVEEND\"] = \"moveend\";\n  ViewportUpdatingMode[\"MOVE\"] = \"move\";\n})(ViewportUpdatingMode || (ViewportUpdatingMode = {}));\n\nfunction buildCenter(longitude, latitude) {\n  return new mapboxgl.LngLat(latitude, longitude);\n}\n\nfunction getMapViewport(map) {\n  var _a = map.getCenter().toArray(),\n      latitude = _a[0],\n      longitude = _a[1];\n\n  var zoom = map.getZoom();\n  var bearing = map.getBearing();\n  var pitch = map.getPitch();\n  return {\n    longitude: longitude,\n    latitude: latitude,\n    zoom: zoom,\n    bearing: bearing,\n    pitch: pitch\n  };\n}\n\nvar MoveFunctions;\n\n(function (MoveFunctions) {\n  MoveFunctions[\"jumpTo\"] = \"jumpTo\";\n  MoveFunctions[\"easeTo\"] = \"easeTo\";\n  MoveFunctions[\"flyTo\"] = \"flyTo\";\n})(MoveFunctions || (MoveFunctions = {}));\n\nfunction getMoveParams(options) {\n  var moveFn = MoveFunctions.jumpTo;\n  var moveOptions = {};\n\n  if (options) {\n    var speed = options.speed,\n        curve = options.curve,\n        easing = options.easing;\n\n    if (speed && curve && easing) {\n      moveFn = MoveFunctions.flyTo;\n      moveOptions = options;\n    } else if (speed && easing) {\n      moveFn = MoveFunctions.easeTo;\n      moveOptions = {\n        speed: speed,\n        easing: easing\n      };\n    }\n  }\n\n  return [moveFn, moveOptions];\n}\n\nfunction setMapViewport(map, viewport, options) {\n  var center = buildCenter(viewport.longitude, viewport.latitude);\n\n  var _a = getMoveParams(options),\n      moveFn = _a[0],\n      moveOptions = _a[1];\n\n  map[moveFn](_assign(_assign(_assign({}, moveOptions), viewport), {\n    center: center\n  }));\n}\n\nfunction getMapOptions(container, viewport, token) {\n  var _a = viewport.latitude,\n      latitude = _a === void 0 ? 0 : _a,\n      _b = viewport.longitude,\n      longitude = _b === void 0 ? 0 : _b,\n      _c = viewport.zoom,\n      zoom = _c === void 0 ? 0 : _c,\n      _d = viewport.bearing,\n      bearing = _d === void 0 ? -0 : _d,\n      _e = viewport.pitch,\n      pitch = _e === void 0 ? 0 : _e;\n  var center;\n  center = [latitude, longitude];\n  var mapOptions = {\n    container: container,\n    center: center,\n    zoom: zoom,\n    bearing: bearing,\n    pitch: pitch\n  };\n  if (token) mapOptions[\"accessToken\"] = token;\n  return mapOptions;\n}\n\nfunction checkUpdatingMode(modeName) {\n  var isCorrect = Object.values(ViewportUpdatingMode).includes(modeName);\n  if (!isCorrect) throw new Error(\"Bad value, viewport updating mode shoud be one of [move, moveend]\");\n  return modeName;\n}\n\nvar defaultViewport = {\n  latitude: 0,\n  longitude: 0,\n  zoom: 0,\n  bearing: -0,\n  pitch: 0\n};\n\nfunction useMapboxGl(_a) {\n  var mapNodeRef = _a.mapNodeRef,\n      style = _a.style,\n      onViewportChanged = _a.onViewportChanged,\n      onLoaded = _a.onLoaded,\n      mapboxAccessToken = _a.mapboxAccessToken,\n      _b = _a.initialViewport,\n      initialViewport = _b === void 0 ? defaultViewport : _b,\n      _c = _a.viewportUpdatingMode,\n      viewportUpdatingMode = _c === void 0 ? ViewportUpdatingMode.MOVEEND : _c;\n  var mapRef = useRef(null);\n  var viewportChanged = useCallback(function (_a) {\n    var map = _a.target;\n    var viewport = getMapViewport(map);\n    onViewportChanged && onViewportChanged(viewport);\n  }, []);\n  useEffect(function () {\n    if (mapNodeRef.current) {\n      var mapOptions = getMapOptions(mapNodeRef.current, initialViewport, mapboxAccessToken);\n      mapRef.current = new mapboxgl.Map(mapOptions);\n\n      var handleMapLoad = function handleMapLoad(_a) {\n        var map = _a.target;\n        viewportChanged({\n          target: map\n        });\n        if (onLoaded) onLoaded(map);\n      };\n\n      mapRef.current.on(\"load\", handleMapLoad);\n    }\n\n    return function () {\n      if (mapRef.current) mapRef.current.remove();\n    };\n  }, [mapNodeRef]);\n  useEffect(function () {\n    if (mapRef.current) if (style) mapRef.current.setStyle(style);\n  }, [mapRef, style]);\n  useEffect(function () {\n    if (mapRef.current) mapRef.current.on(checkUpdatingMode(viewportUpdatingMode), viewportChanged);\n    return function () {\n      if (mapRef.current) mapRef.current.off(viewportUpdatingMode, viewportChanged);\n    };\n  }, [mapRef, viewportUpdatingMode]);\n  var getMap = useCallback(function () {\n    if (mapRef.current) return mapRef.current;else return null;\n  }, [mapRef]);\n  var setViewport = useCallback(function (viewport, options) {\n    if (mapRef.current) {\n      var currentViewport = getMapViewport(mapRef.current);\n      setMapViewport(mapRef.current, _assign(_assign({}, currentViewport), viewport), options);\n    }\n  }, [mapRef]);\n  return {\n    mapRef: mapRef,\n    setViewport: setViewport,\n    getMap: getMap\n  };\n}\n\nexport default useMapboxGl;\nexport { ViewportUpdatingMode, getMapViewport };","// Custom base styles for using without token\nexport const STYLES = {\n  OSM: {\n    version: 8,\n    sources: {\n      osm: {\n        type: \"raster\",\n        tiles: [\n          \"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          \"https://b.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          \"https://c.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        ],\n        tileSize: 256\n      }\n    },\n    layers: [\n      {\n        id: \"osm\",\n        source: \"osm\",\n        type: \"raster\"\n      }\n    ]\n  },\n\n  OTP: {\n    version: 8,\n    sources: {\n      otp: {\n        type: \"raster\",\n        tiles: [\n          \"https://a.tile.opentopomap.org/{z}/{x}/{y}.png\",\n          \"https://b.tile.opentopomap.org/{z}/{x}/{y}.png\",\n          \"https://c.tile.opentopomap.org/{z}/{x}/{y}.png\"\n        ],\n        tileSize: 256\n      }\n    },\n    layers: [\n      {\n        id: \"otp\",\n        source: \"otp\",\n        type: \"raster\"\n      }\n    ]\n  }\n};\n","import React, { useState, useRef } from \"react\";\n\nimport useMapboxGl, { ViewportUpdatingMode as mode } from \"use-mapbox-gl\";\nimport { STYLES } from \"./mapStyles\";\n\nconst INITIAL_VIEWPORT = {\n  latitude: 44.634507629603483,\n  longitude: 48.818963526964204,\n  zoom: 10\n};\n\nconst Map = () => {\n  const [updatingMode, setUpdatingMode] = useState(mode.MOVEEND);\n  const [style, setStyle] = useState(\"OSM\");\n  const mapDivRef = useRef();\n\n  // This is example of using without token\n  const { getMap, setViewport } = useMapboxGl({\n    mapNodeRef: mapDivRef,\n    initialViewport: INITIAL_VIEWPORT,\n    style: STYLES[style],\n    onViewportChanged: v => console.log(\"viewport changed\", v),\n    onLoaded: () => console.log(\"map zoom\", getMap().getZoom()),\n    viewportUpdatingMode: updatingMode\n  });\n  return (\n    <div className=\"app\">\n      <div className=\"options\">\n        <div>\n          <p>\n            Select map style{\" \"}\n            <select\n              name=\"style\"\n              value={style}\n              onChange={e => setStyle(e.target.value)}\n            >\n              <option value=\"OSM\">open street maps</option>\n              <option value=\"OTP\">open topo map</option>\n            </select>{\" \"}\n            <button\n              onClick={() =>\n                setViewport(INITIAL_VIEWPORT, {\n                  speed: 1,\n                  curve: 1,\n                  easing: t => t\n                })\n              }\n            >\n              reset vieport\n            </button>\n          </p>\n          <p>\n            Select viewport updating mode{\" \"}\n            <select\n              name=\"mode\"\n              value={updatingMode}\n              onChange={e => setUpdatingMode(e.target.value)}\n            >\n              <option value={mode.MOVEEND}>MOVEEND</option>\n              <option value={mode.MOVE}>MOVE</option>\n            </select>{\" \"}\n            (check the console)\n          </p>\n        </div>\n        <h1>\n          <a href=\"https://github.com/dqunbp/use-mapbox-gl\">use-mapbox-gl</a>\n        </h1>\n      </div>\n      <div className=\"map-container\">\n        <div id=\"map\" ref={mapDivRef}></div>\n      </div>\n    </div>\n  );\n};\nexport default Map;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport Map from \"./Map\";\n\nReactDOM.render(<Map />, document.getElementById(\"root\"));\n"],"sourceRoot":""}